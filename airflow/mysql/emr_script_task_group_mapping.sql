WITH ACTIVE_DAGS AS (
	SELECT  *
	  FROM  DAG
	 WHERE  1 = 1
	   AND  IS_PAUSED = 0
	   AND  IS_ACTIVE = 1
)
SELECT  SERIALIZED.ARG AS SCRIPT_PATH
		, CASE WHEN LENGTH(SERIALIZED.TASK_ID) - LENGTH(REPLACE(SERIALIZED.TASK_ID, '.', '')) > 0
					THEN SUBSTRING_INDEX(SERIALIZED.TASK_ID, '.', 1)
			   ELSE '#' END AS TASK_GRP_ID
		, SERIALIZED.TASK_ID AS TASK_ID
		, DAG.DAG_ID AS DAG_ID
		, SERIALIZED.FILELOC AS DAG_PATH
		, REPLACE(DAG.SCHEDULE_INTERVAL, '"', '') AS SCHEDULE
		, DAGRUN.LAST_RUN_DATE AS LAST_RUN_DATE
		, DAGRUN.LAST_RUN_END_DATE AS LAST_RUN_END_DATE
		, DAGRUN.NEXT_RUN_DATE AS NEXT_RUN_DATE
  FROM  (
		SELECT  T02.DAG_ID AS DAG_ID
				, T02.FILELOC AS FILELOC
				, JSON_UNQUOTE(JSON_EXTRACT(T02.TASK, '$.task_id')) AS TASK_ID
				, JSON_UNQUOTE(JSON_EXTRACT(T02.TASK, '$._task_type')) AS TASK_TYPE
				, REGEXP_REPLACE(T02.ARG, '/lib/|/env/', '#') AS ARG
		  FROM  (
				SELECT  T01.DAG_ID
						, T01.FILELOC
						, JT01.TASK
						, JT01.ARG
				  FROM  SERIALIZED_DAG T01
				        , JSON_TABLE(
					        T01.DATA
					        , "$.dag.task[*]" COLUMNS (
						        TASK JSON PATH "$"
						        , NESTED PATH "$.steps[0].HadoopJarStep.Args[*]", COLUMNS (
							        ARG VARCHAR(1000) PATH "$"
							    )
						    )
					    ) AS JT01
				) T02
		 WHERE  1 = 1
		   AND  TRIM(T02.ARG) RLIKE '\\.(py|sh)$'
		) SERIALIZED
  JOIN  (
		SELECT  DAG_ID
				, SCHEDULE_INTERVAL
		  FROM  ACTIVE_DAGS
		) DAG
	ON  SERIALIZED.DAG_ID = DAG.DAG_ID
  LEFT
  JOIN  (
		SELECT  DAG_ID
				, LAST_RUN_DATE
				, LAST_RUN_END_DATE
				, NEXT_RUN_DATE
		  FROM  (
				SELECT  DAG.DAG_ID
						, DATE_FORMAT(DAG.NEXT_DAGRUN_DATA_INTERVAL_START, '%Y-%m-%d %h:%i:%s') AS LAST_RUN_DATE
						, DATE_FORMAT(RUN.END_DATE, '%Y-%m-%d %h:%i:%s') AS LAST_RUN_END_DATE
						, DATE_FORMAT(DAG.NEXT_DAGRUN_DATA_INTERVAL_END, '%Y-%m-%d %h:%i:%s') AS NEXT_RUN_DATE
						, ROW_NUMBER() OVER (PARTITION BY RUN.DAG_ID ORDER BY RUN.RUN_ID DESC) AS RNUM
				  FROM  (
						SELECT  DAG_ID
								, RUN_ID
								, END_DATE
						  FROM  DAG_RUN
				         WHERE  DATE_FORMAT(EXECUTION_DATE, , '%Y-%m-%d') > DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH)
				        ) RUN
		          JOIN  (
				        SELECT  DAG_ID
						        , NEXT_DAGRUN_DATA_INTERVAL_START
						        , NEXT_DAGRUN_DATA_INTERVAL_END
						  FROM  ACTIVE_DAGS
						) DAG
				    ON  RUN.DAG_ID = DAG.DAG_ID
				) TT
		 WHERE  RNUM = 1
		) DAGRUN
    ON  SERIALIZED.DAG_ID = DAGRUN.DAG_ID
 WHERE  1 = 1
   AND  INSTR(SERIALIZED.ARG, '#') = 0
;
